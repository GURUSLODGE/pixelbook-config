---

- name: Ensure all packages are up to-date
  apt:
    upgrade: dist
    update_cache: yes
    cache_valid_time: "{{ apt_cache_valid_time }}"
  become: yes

- name: Install standard GNU/Linux utilities
  apt:
    name: "{{ item }}"
    update_cache: yes
    cache_valid_time: "{{ apt_cache_valid_time }}"
  with_items: "{{ extra_gnu_linux_packages }}"
  become: yes

- name: Optionally install powerline-shell
  include: powerline_shell.yml
  when: install_powerline_shell
  tags:
    - shell
    - powerline-shell

- name: Include python-related tasks
  include: python.yml
  tags:
    - python

- name: Template .bash_profile to  ~/.bash_profile
  template:
    src: home/user/.bash_profile.j2
    dest: "{{ ansible_env.HOME }}/.bash_profile"
  tags:
    - shell
    - config

- name: Template .ssh/config to  ~/.ssh/config
  template:
    src: home/user/.ssh/config.j2
    dest: "{{ ansible_env.HOME }}/.ssh/config"
  tags:
    - ssh

- name: Ensure ~/.local/share/applications/ directory
  file:
    dest: "{{ ansible_env.HOME }}/.local/share/applications"
    state: directory

- name: template ".gitignore_global" to home directory
  template:
    src: home/user/.gitignore_global.j2
    dest: "{{ ansible_env.HOME }}/.gitignore_global"

- name: Set up user.name global git config entry
  git_config:
    name: user.name
    scope: global
    value: "{{ git_user_name }}"

- name: Set up user.email global git config entry
  git_config:
    name: user.email
    scope: global
    value: "{{ git_user_email }}"

- name: Set up core.excludesfile global git config entry
  git_config:
    name: core.excludesfile
    scope: global
    value: "{{ ansible_env.HOME }}/.gitignore_global"

- name: Install screen
  apt:
    name: screen
    update_cache: yes
    cache_valid_time: "{{ apt_cache_valid_time }}"
  become: yes
  tags:
    - screen

- name: Template .screenrc to  ~/.screenrc
  template:
    src: home/user/.screenrc.j2
    dest: "{{ ansible_env.HOME }}/.screenrc"
  tags:
    - config
    - screen
